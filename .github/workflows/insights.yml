name: insights
on: [push]
jobs:
  setup:
    runs-on: ubuntu-20.04
    outputs:
      branch: ${{ steps.extract_branch.outputs.branch }}
      code: ${{ steps.insights.outputs.code }}
      architecture: ${{ steps.insights.outputs.architecture }}
      complexity: ${{ steps.insights.outputs.complexity }}
      style: ${{ steps.insights.outputs.style }}
    strategy:
      matrix:
        php: [ 8.3 ]
    steps:
      - uses: actions/checkout@v3
      - name: Extract branch name
        id: extract_branch
        run: |
          TMP_PULL_HEAD_REF="${{ github.head_ref }}"
          TMP_GITHUB_REF="${GITHUB_REF#refs/heads/}"
          EXPORT_VALUE=""
          if [ "${TMP_PULL_HEAD_REF}" != "" ]
          then
              EXPORT_VALUE="${TMP_PULL_HEAD_REF}"
          else
              EXPORT_VALUE="${TMP_GITHUB_REF}"
          fi
          echo "branch=${EXPORT_VALUE}" >> $GITHUB_OUTPUT
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite
          coverage: xdebug
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: vendor
          key: composer-${{ hashFiles('**/composer.lock') }}
      - name: Install PHP Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Generate key
        run: php artisan key:generate
      - name: Get code insights
        id: insights
        run: |
          php artisan insights -n -s --format=json --min-quality=0 --min-complexity=0 --min-architecture=0 --min-style=0 > insights.json
          CODE="$( jq .summary.code insights.json )"
          ARCHITECTURE="$( jq .summary.architecture insights.json )"
          COMPLEXITY="$( jq .summary.complexity insights.json )"
          STYLE="$( jq .summary.style insights.json )"
          echo "code=${CODE}" >> $GITHUB_OUTPUT
          echo "architecture=${ARCHITECTURE}" >> $GITHUB_OUTPUT
          echo "complexity=${COMPLEXITY}" >> $GITHUB_OUTPUT
          echo "style=${STYLE}" >> $GITHUB_OUTPUT
  check:
    needs: setup
    runs-on: ubuntu-20.04
    outputs:
      code: ${{ needs.setup.outputs.code }}
      architecture: ${{ needs.setup.outputs.architecture }}
      complexity: ${{ needs.setup.outputs.complexity }}
      style: ${{ needs.setup.outputs.style }}
    steps:
      - name: Check test coverage
        env:
          CODE: ${{ needs.setup.outputs.code }}
          ARCHITECTURE: ${{ needs.setup.outputs.architecture }}
          COMPLEXITY: ${{ needs.setup.outputs.complexity }}
          STYLE: ${{ needs.setup.outputs.style }}
        run: |
          echo "Code insights:"
          echo "Quality: ${CODE}%"
          echo "Architecture: ${ARCHITECTURE}%"
          echo "Complexity: ${COMPLEXITY}%"
          echo "Style: ${STYLE}%"
  badges:
    needs: setup
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          ref: badges
          path: badges
      - name: Generate the quality badge
        uses: emibcn/badge-action@v2.0.2
        with:
          label: 'Code Quality'
          status: ${{ needs.setup.outputs.code }}%
          color: ${{
            needs.setup.outputs.code > 90 && 'green'              ||
            needs.setup.outputs.code > 80 && 'yellow'             ||
            needs.setup.outputs.code > 70 && 'orange'             ||
            'red' }}
          path: badges/insights-code.svg
      - name: Generate the architecture badge
        uses: emibcn/badge-action@v2.0.2
        with:
          label: 'Code Architecture'
          status: ${{ needs.setup.outputs.architecture }}%
          color: ${{
            needs.setup.outputs.architecture > 90 && 'green'              ||
            needs.setup.outputs.architecture > 80 && 'yellow'             ||
            needs.setup.outputs.architecture > 70 && 'orange'             ||
            'red' }}
          path: badges/insights-architecture.svg
      - name: Generate the complexity badge
        uses: emibcn/badge-action@v2.0.2
        with:
          label: 'Code Complexity'
          status: ${{ needs.setup.outputs.complexity }}%
          color: ${{
            needs.setup.outputs.complexity > 90 && 'green'              ||
            needs.setup.outputs.complexity > 80 && 'yellow'             ||
            needs.setup.outputs.complexity > 70 && 'orange'             ||
            'red' }}
          path: badges/insights-complexity.svg
      - name: Generate the style badge
        uses: emibcn/badge-action@v2.0.2
        with:
          label: 'Code Style'
          status: ${{ needs.setup.outputs.style }}%
          color: ${{
            needs.setup.outputs.style > 90 && 'green'              ||
            needs.setup.outputs.style > 80 && 'yellow'             ||
            needs.setup.outputs.style > 70 && 'orange'             ||
            'red' }}
          path: badges/insights-style.svg
      - name: Push badges
        env:
          BRANCH: ${{ needs.setup.outputs.branch }}
        working-directory: ./badges
        run: |
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com
          mkdir -p "${BRANCH}"

          mv insights-code.svg "${BRANCH}"
          git add "${BRANCH}/insights-code.svg"

          mv insights-architecture.svg "${BRANCH}"
          git add "${BRANCH}/insights-architecture.svg"

          mv insights-complexity.svg "${BRANCH}"
          git add "${BRANCH}/insights-complexity.svg"

          mv insights-style.svg "${BRANCH}"
          git add "${BRANCH}/insights-style.svg"

          git commit --author "damianchojnacki <damianchojnacki@users.noreply.github.com>" -m "Add/Update badge [skip ci]" || true
          git push
